module "pipeline_bucket" {
  source = "../../../modules/pipeline/03-s3-bucket"
  s3_bucket_name_pipeline = "eks-pipeline-java-application"
  kms_key_arn = module.pipeline_kms_keys.arn

  tags = {
    Description         = "This bucket is used to upload artifacts generated by the pipeline"
    Environment         = var.environment
    CreatedBy           = var.created_by
    Application         = var.application
    CostCenter          = var.cost_center
    Contact             = var.contact
    MaintenanceWindow   = var.maintenance_window
    DeletionDate        = var.deletion_date
    CreationDate        = formatdate("DD MMM YYYY hh:mm ZZZ", timestamp())
  }
}

module "iam_permissions" {
  source = "../../../modules/pipeline/02-iam-permissions"
  
  bucket_codepipeline_name  = module.pipeline_bucket.s3bucket_name
  codebuild_name            = var.build_projects
  kms_arn                   = module.pipeline_kms_keys.arn 

  tags = {
    Description         = "This key is used to encrypt bucket objects"
    Environment         = var.environment
    CreatedBy           = var.created_by
    Application         = var.application
    CostCenter          = var.cost_center
    Contact             = var.contact
    MaintenanceWindow   = var.maintenance_window
    DeletionDate        = var.deletion_date
    CreationDate        = formatdate("DD MMM YYYY hh:mm ZZZ", timestamp())
  }
}

module "pipeline_kms_keys" {
  source = "../../../modules/pipeline/01-kms-keys"
  codepipeline_role_arn = module.iam_permissions.iam_role_cp_arn

  tags = {
    Name                = "alias/codepipeline/${var.application}-${var.environment}"
    Description         = "This key is used to encrypt bucket objects"
    Environment         = var.environment
    CreatedBy           = var.created_by
    Application         = var.application
    CostCenter          = var.cost_center
    Contact             = var.contact
    MaintenanceWindow   = var.maintenance_window
    DeletionDate        = var.deletion_date
    CreationDate        = formatdate("DD MMM YYYY hh:mm ZZZ", timestamp())
  }
}

module "code_commit" {
  source = "../../../modules/pipeline/04-code-commit"
  
  branch_default_name = "main"

  tags = {
    Description         = "CodeCommit repository to upload the code"
    Environment         = var.environment
    CreatedBy           = var.created_by
    Application         = var.application
    CostCenter          = var.cost_center
    Contact             = var.contact
    MaintenanceWindow   = var.maintenance_window
    DeletionDate        = var.deletion_date
    CreationDate        = formatdate("DD MMM YYYY hh:mm ZZZ", timestamp())
  }
}

module "code_build" {
  source = "../../../modules/pipeline/05-code-build"
  
  build_projects                      = var.build_projects
  build_project_source                = var.build_project_source
  builder_compute_type                = var.builder_compute_type
  builder_image                       = var.builder_image
  builder_type                        = var.builder_type
  builder_image_pull_credentials_type = var.builder_image_pull_credentials_type
  codebuild_service_roles_arn         = module.iam_permissions.iam_roles_codebuild_arn
  encryption_key_arn                  = module.pipeline_kms_keys.arn
  s3_bucket_codepipeline              = module.pipeline_bucket.s3bucket_name
  
  tags = {
    Description         = "CodeBuild "
    Environment         = var.environment
    CreatedBy           = var.created_by
    Application         = var.application
    CostCenter          = var.cost_center
    Contact             = var.contact
    MaintenanceWindow   = var.maintenance_window
    DeletionDate        = var.deletion_date
    CreationDate        = formatdate("DD MMM YYYY hh:mm ZZZ", timestamp())
  }
}
/*
module "code_deploy" {
  source = "../../../modules/pipeline/06-code-deploy"

  codedeploy_service_role_arn = module.iam_permissions.iam_role_codedeploy_arn

  tags = {
    Description         = "CodeCommit repository to upload the code"
    Environment         = var.environment
    CreatedBy           = var.created_by
    Application         = var.application
    CostCenter          = var.cost_center
    Contact             = var.contact
    MaintenanceWindow   = var.maintenance_window
    DeletionDate        = var.deletion_date
    CreationDate        = formatdate("DD MMM YYYY hh:mm ZZZ", timestamp())
  }
}*/

module "codepipeline" {
  source = "../../../modules/pipeline/07-codepipeline"

  aws_codecommit_repo_branch        = module.code_commit.repository_branch
  aws_codecommit_repo_id            = module.code_commit.repository_id
  execution_mode                    = var.execution_mode
  iam_codepipeline_arn              = module.iam_permissions.iam_role_cp_arn
  kms_arn_s3_bucket                 = module.pipeline_kms_keys.arn
  s3_bucket_codepipeline            = module.pipeline_bucket.s3bucket_name
  version_pipeline                  = var.version_pipeline
  stages                            = var.stages_input
  #codedeploy_app_name               = module.code_deploy.codedeploy_app_name
  #codedeploy_deployment_group_name  = module.code_deploy.codedeploy_deployment_group_name

  tags = {
    Description         = "Codepipeline to define all stages"
    Environment         = var.environment
    CreatedBy           = var.created_by
    Application         = var.application
    CostCenter          = var.cost_center
    Contact             = var.contact
    MaintenanceWindow   = var.maintenance_window
    DeletionDate        = var.deletion_date
    CreationDate        = formatdate("DD MMM YYYY hh:mm ZZZ", timestamp())
  }
}

module "ecr_repository" {
  source = "../../../modules/pipeline/08-ecr-repository"

  repositories = var.repositories

  tags = {
    Description         = "ECR reporitory"
    Environment         = var.environment
    CreatedBy           = var.created_by
    Application         = var.application
    CostCenter          = var.cost_center
    Contact             = var.contact
    MaintenanceWindow   = var.maintenance_window
    DeletionDate        = var.deletion_date
    CreationDate        = formatdate("DD MMM YYYY hh:mm ZZZ", timestamp())
  }
}